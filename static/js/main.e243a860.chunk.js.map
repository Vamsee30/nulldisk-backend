{"version":3,"sources":["Vim.tsx","config.js","hooks/useApi.tsx","Auth.tsx","Review.tsx","Main.tsx","reportWebVitals.ts","state/auth/actions.ts","state/auth/reducer.ts","state/index.ts","index.tsx"],"names":["require","Vim","props","codeInput","React","createRef","editor","focus","insert","text","doc","getDoc","cursor","getCursor","replaceRange","flush","setValue","setState","currentSig","md5","lastSig","writeStatus","console","log","insert_image","line","src","width","element","document","createElement","addLineWidget","above","noHScroll","reload_images","pattern","lines","state","content","split","active_widgets","widgets","map","x","widget","clear","i","length","match","exec","image","title","parseInt","url","push","vimrc","CodeMirror","mapCommand","context","image_reload","image_disable","quit","wquit","save","commands","changesCallback","highlight","setTimeout","statusBars","className","commandDisplay","vimMode","render","statusBar","id","name","ref","defaultMsg","this","current","fromTextArea","mode","keyMap","theme","lineNumbers","showCursorWhenSelecting","lineWrapping","keys","on","edit","data","getValue","sig","key","e","Component","defaultProps","apiUrl","useApi","payload","useState","accessKey","setAccessKey","createPersistedState","useRefreshKeyState","refreshKey","setRefreshKey","refreshKeyIsValid","setRefreshKeyIsValid","accessKeyIsValid","setAccessKeyIsValid","validHttpCodes","go","useCallback","callback","body","method","path","options","headers","JSON","stringify","fetch","then","response","includes","status","json","useEffect","access","username","password","refresh","fail","Modal","setAppElement","Auth","auth","_updateAuth","authModalIsOpen","setAuthModal","setUsername","setPassword","updateAuth","setAuth","opts","defaultPayload","res","setPayload","isOpen","onRequestClose","closeAction","overlayClassName","onSubmit","preventDefault","onChange","target","value","type","Review","cards","setCards","jsxCards","setJsxCards","deck","_setDeck","due","setDue","ignore","setIgnore","Date","today","daysAhead","_setDaysAhead","quality","_setQuality","pageIndex","setPageIndex","cardIndex","setCardIndex","query","setQuery","toggleBlank","cardI","blankI","cardsObject","card","blankObjects","blanks","blank","blankIndex","hidden","Title","note","jsxcards","entries","contentArray","word","append","components","visibility","y","onClick","items","splice","updatePostId","filter","test","inline","multiline","results","trim","index","sort","a","b","extractBlanks","newPages","repetitions","vDate","setDate","getDate","overDuePages","due_date","event","_deck","revs","r","date_created","date_updated","easiness","parseFloat","last_reviewed","setDeck","placeholder","days","isNaN","closeModal","setQuality","dateFormat","Main","postId","updateContent","searchPanelIsOpen","setSearchPanelIsOpen","reviewPanelIsOpen","setReviewPanelIsOpen","setResults","previewId","setPreviewId","newChanges","setNewChanges","alertText","setAlertText","safeChangeCallback","setSafeChangeCallback","dialogChangesIsOpen","setDialogChangesIsOpen","IoLinksIsOpen","setIoLinksIsOpen","incomingLinks","setIncomingLinks","outgoingLinks","setOutgoingLinks","defaultFilters","primary","when","date","order_by","searchFilters","setSearchFilters","vimRef","useRef","safeClose","openDocument","getOutLinks","executeQuery","parsed_results","_setResults","resultRows","row","selectedPreview","result","Content","pl","PayLoad","override","backLinks","action","autoComplete","autoFocus","itext","delete","some","fresults","getTime","filteredResults","prev","object","style","color","fontWeight","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createAction","setModalOpen","store","createReducer","modalOpen","builder","addCase","configureStore","reducer","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e243a860.chunk.js","sourcesContent":["import React, {useImperativeHandle} from 'react';\nimport './index.css';\nimport './Vim.css';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/the-matrix.css';\nimport 'codemirror/addon/dialog/dialog.css';\nimport CodeMirror from 'codemirror';\nimport md5 from 'md5';\n//import CodeMirror from '@jkvim/react-codemirror2'\n//require('codemirror/lib/codemirror.js');\nrequire('codemirror/mode/markdown/markdown.js');\nrequire('codemirror/mode/gfm/gfm.js');\nrequire('codemirror/mode/javascript/javascript');\nrequire('codemirror/keymap/vim.js');\nrequire('codemirror/addon/dialog/dialog.js');\nrequire('codemirror/addon/search/searchcursor.js');\nrequire('codemirror/mode/clike/clike.js');\nrequire('codemirror/addon/edit/matchbrackets.js');\n\ninterface IProps{\n  content: string,\n  defaultMsg: string,\n  writeStatus: string,\n  save: (content:string,callback:()=>void)=>void;\n  quit: (override:boolean)=>void;\n  changesCallback: (x:boolean)=>void; // lets parent know when changes have been made\n  ref: React.MutableRefObject<Vim|null>,\n}\ninterface IState{\n  content: string,\n  currentSig: string,\n  lastSig: string,\n  writeStatus: string,\n  commandDisplay: string,\n  vimMode: string,\n  widgets: Array<IWidget>,\n  highlight: boolean,\n}\n\ninterface IWidget {\n  title: string,\n  width: number|null,\n  url: string,\n  line: number,\n  widget: null|any,\n}\n\n\nclass Vim extends React.Component<IProps, IState> {\n\n  private codeInput = React.createRef<HTMLTextAreaElement>();\n  private editor:CodeMirror.Editor|null;\n  \n  static defaultProps = {\n    content: '',\n    defaultMsg: '93',\n    writeStatus: 'File written to database!',\n    save: (content:string)=>{},\n    changesCallback: (x:boolean)=>{},\n  }\n\n  constructor(props: IProps){\n    super(props);\n    this.state = {\n      content: this.props.content,\n      currentSig: '',\n      lastSig: '',\n      writeStatus: this.props.defaultMsg,\n      commandDisplay: '',\n      vimMode: 'normal',\n      widgets: [],\n      highlight: false,\n    }\n    this.editor = null;\n    this.vimrc();\n  }\n\n  componentDidMount(){\n\n    if(this.codeInput.current){\n\n      this.editor = CodeMirror.fromTextArea(this.codeInput.current,{mode:'gfm', keyMap:'vim',theme:'the-matrix', lineNumbers:true, showCursorWhenSelecting: true, lineWrapping:true});\n      var keys = '';\n      this.editor.getDoc().setValue(this.props.content)\n      this.editor.on(\"change\",(edit)=>{\n        const data = edit.getValue()\n        const sig = md5(data)\n        this.setState({\n          content:data,\n          currentSig: sig\n        });\n        if(this.state.lastSig !== sig){\n          this.setState({writeStatus:'Unsaved changes...'})\n          this.props.changesCallback(true)\n        } else{\n          this.setState({writeStatus:'No changes made'})\n          this.props.changesCallback(false)\n        }\n      });\n\n      CodeMirror.on(this.editor, 'vim-keypress', (key:string)=>{\n        keys = keys + key;\n        this.setState({commandDisplay:keys})\n      });\n\n      CodeMirror.on(this.editor, 'vim-command-done', (e:any)=> {\n        keys = '';\n        this.setState({commandDisplay:keys})\n      });\n\n      CodeMirror.on(this.editor, 'vim-mode-change', (e:any)=> {\n        this.setState({vimMode:e.mode})\n      });\n\n      this.focus()\n    \n    }\n\n  }\n\n  focus = () =>{\n    if(this.editor){\n      this.editor.focus()\n    }\n  }\n\n  insert = (text:string) => {\n    if(this.editor){\n      var doc = this.editor.getDoc()\n      var cursor = doc.getCursor()\n      doc.replaceRange(text,cursor)\n    }\n    this.focus()\n  }\n\n\n  flush = (text:string) => {\n    if(this.editor){\n      var doc = this.editor.getDoc()\n      doc.setValue(text)\n      this.setState({\n        currentSig:md5(text),\n        lastSig:md5(text)\n      })\n\n      this.setState({writeStatus:'All Systems Go!'})\n      console.log('flushed data')\n    }\n    this.focus()\n  }\n\n  insert_image = (line:number,src:string,width:null|number) => {\n    if(this.editor){\n      var doc = this.editor.getDoc()\n      const element = document.createElement('img')\n      element.src= src\n      console.log(width)\n      if(width){\n        element.width=width\n      }\n      return doc.addLineWidget(line, element,{above:false, noHScroll:true})\n    }\n  }\n\n  reload_images = () => {\n    var pattern = /!\\[(.*?)\\](\\[width=(\\d{1,})\\])?\\((.*)\\)/\n    var lines = this.state.content.split('\\n')\n    var active_widgets:Array<IWidget> = []\n    this.state.widgets.map(x=>x.widget.clear())\n    for(var i=0;i<lines.length; i++){\n      var match = pattern.exec(lines[i])\n      if(match){\n        var image = {\n          title: match[1],\n          width: (match[3]===null)?null:parseInt(match[3]),\n          url: match[4],\n          line: i+1,\n          widget: this.insert_image(i+1,match[4],(match[3]===null)?null:parseInt(match[3]))\n        }\n        console.log(image)\n        active_widgets.push(image)\n      }\n    }\n    this.setState({\n      widgets:active_widgets\n    })\n  }\n\n\n  vimrc = () =>{\n    CodeMirror.Vim.map('J', '5j', 'normal')\n    CodeMirror.Vim.map('K', '5k', 'normal')\n    CodeMirror.Vim.mapCommand('jk', 'action', 'exitInsertMode', {}, { context: 'insert' });\n\n    CodeMirror.Vim.mapCommand('U', 'action', 'redo', {}, { context: 'normal' });\n\n    CodeMirror.Vim.image_reload = ()=>{\n      this.reload_images()\n    }\n    CodeMirror.Vim.image_disable = () => {\n      this.state.widgets.map(x=>x.widget.clear())\n    }\n    CodeMirror.Vim.quit = () => {\n      this.props.quit(false)\n    }\n    CodeMirror.Vim.wquit = () => {\n      this.props.save(this.state.content,()=>this.props.quit(true))\n    }\n    CodeMirror.commands.save = ()=>{\n      this.props.save(this.state.content,()=>{\n        this.props.changesCallback(false)\n        this.setState({\n          writeStatus:this.props.writeStatus,\n          lastSig: md5(this.state.content),\n          highlight: true,\n        });\n        setTimeout(()=>{\n          this.setState({highlight: false})\n        }, 1000)\n      })\n    };\n  }\n  \n\n  statusBars = () => {\n    const highlight = this.state.highlight ? 'green_highlight':''\n    return (\n      <div className={`statusBar_wrapper ${highlight}`}>\n      <div className=\"statusBar_write\">{this.state.writeStatus}</div>\n        <div className=\"statusBar_buffer\">Key buffer: {this.state.commandDisplay}</div>\n        <div className=\"statusBar_mode\">Vim mode: { this.state.vimMode }</div>\n      </div>\n    )\n  }\n\n  render = () => {\n    const statusBar = this.statusBars()\n    return(\n      <div className=\"vim\">\n        <textarea id=\"code\" name=\"code\" className=\"code\" ref={this.codeInput} ></textarea>\n        {statusBar}\n      </div>\n    )\n  }\n}\n\nexport default Vim;\n","const dev = 'http://127.0.0.1:8000/api/'\nconst prod = '/api/'\n\nexport const apiUrl = process.env.NODE_ENV === 'development' ? dev:prod\n","import {useState, useEffect, useCallback} from 'react'\nimport createPersistedState from 'use-persisted-state'\nimport {apiUrl} from '../config'\nconsole.log(\"MODE: \"+apiUrl)\nexport interface IProps {\n    username:string,\n    password:string,\n    fail: ()=>void\n}\n\nexport interface IPayload {\n    path:string,\n    method:string,\n    body:{}|null,\n    callback: (result:any)=>any,\n}\n\nfunction useApi(props:IProps, payload:IPayload){\n\n    const [accessKey, setAccessKey] = useState('')\n    const useRefreshKeyState = createPersistedState('refreshKey')\n    const [refreshKey, setRefreshKey] = useRefreshKeyState('')\n    //const [refreshKey, setRefreshKey] = useState('')\n    const [refreshKeyIsValid, setRefreshKeyIsValid] = useState<null|boolean>(null)\n    // const apiUrl = 'http://127.0.0.1:8000/api/'\n    // const apiUrl = '/api/'\n    const [accessKeyIsValid, setAccessKeyIsValid] = useState<null|boolean>(null)\n\n    const validHttpCodes = [200, 201, 202, 203, 204]\n    \n    const go = useCallback((accessKey)=>{\n        const {body, method, path} = payload\n        console.log('executing GO:'+accessKey)\n        if(method === 'logout'){\n            return logout(payload.callback)\n        }\n        const options = {\n            method: method,\n            headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer '+accessKey,\n            },\n            ... (body !== null) && { body: JSON.stringify(body) }\n        }\n        fetch(apiUrl+path,options)\n        .then(response=>{\n            if(!validHttpCodes.includes(response.status)){\n                setAccessKeyIsValid(false)\n            } else {\n                setAccessKeyIsValid(true)\n                response.json()\n                .then(response=>{\n                    payload.callback(response)\n                })\n            }\n        })\n    },[payload])\n\n    function logout(callback:(response:null)=>void){\n        setRefreshKey('')\n        setAccessKey('')\n        setRefreshKeyIsValid(null)\n        setAccessKeyIsValid(null)\n        callback(null)\n    }\n\n    useEffect(()=>{\n        if(accessKeyIsValid===false){\n            console.log('access key is false')\n            // We tried to make a request, but our key is invalid.\n            // We need to use the refresh key\n            const options = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json', },\n                body: JSON.stringify( {'refresh': refreshKey} ),\n            }\n            fetch(apiUrl+'token/refresh/', options)\n            .then(response=>{\n                if(!validHttpCodes.includes(response.status)){\n                    setRefreshKeyIsValid(false)\n                    // this needs to trigger a login event\n                } else {\n                    response.json()\n                    .then(response=>{\n                        setRefreshKeyIsValid(true)\n                        setAccessKey(response.access)\n                        // setAccessKeyIsValid(true)\n                    })\n                }\n            })\n        }\n    },[accessKeyIsValid])\n\n\n    useEffect(()=>{\n        console.log('responding to change in access key:'+accessKey)\n        go(accessKey)\n    },[accessKey,payload])\n\n    useEffect(()=>{\n        if(refreshKeyIsValid===false){\n            // even after trying to login, the RK is invalid\n            // We must straight up log in.\n            const options = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    username: props.username,\n                    password: props.password,\n                 })\n            }\n            fetch(apiUrl+'token/', options)\n            .then(response=>{\n                console.log(response.status)\n                if(!validHttpCodes.includes(response.status)){\n                    setAccessKeyIsValid(null)\n                    setRefreshKeyIsValid(null)\n                    props.fail()\n                    console.log('total fail')\n                }\n                else { \n                    console.log('login works')\n                    response.json()\n                    .then(response=>{\n                        setAccessKey(response.access)\n                        setRefreshKey(response.refresh)\n                        // setRefreshKeyIsValid(true)\n                        // setAccessKeyIsValid(true) // Commenting this out disables the loop\n                    })\n                }\n            })\n        }\n\n        \n    },[refreshKeyIsValid])\n\n};\n\nexport default useApi\n","import React, {useState} from 'react';\nimport useApi, {IPayload} from './hooks/useApi';\nimport Modal from 'react-modal'\nimport './modal.css';\nModal.setAppElement('#root')\n\ninterface IProps {\n  payload:IPayload,\n  setPayload:(payload:IPayload)=>void,\n  setAuth:(auth:boolean)=>void,\n  closeAction:()=>void,\n}\n\n\nfunction Auth(props:IProps):JSX.Element{\n\n  const [auth, _updateAuth] = useState<boolean>(false)\n  const [authModalIsOpen, setAuthModal] = useState(false)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  function updateAuth(auth:boolean){\n    _updateAuth(auth)\n    props.setAuth(auth)\n  }\n\n  const opts = {\n    username: username,\n    password: password,\n    fail: forceLogin,\n  }\n\n  const defaultPayload:IPayload = {\n      path:'notes/validateAuth/',\n      method: 'GET',\n      body: null,\n      callback: loginAction\n  }\n\n  //\n  // console.log(_payload)\n\n  if(props.payload.path===''){\n    props.setPayload(defaultPayload)\n  }\n\n  useApi(opts, props.payload)\n\n  function forceLogin(){\n    setAuthModal(true)\n    updateAuth(false)\n  }\n\n  function closeAuthModal(){\n    if(auth){ setAuthModal(false)\n      props.closeAction()\n    }\n  }\n\n\n  function SubmitLogin(){\n    props.setPayload(defaultPayload)\n  }\n\n  function loginAction(res:any){\n    updateAuth(true)\n    setAuthModal(false)\n    setUsername(res.auth)\n  }\n\n\n  return(\n\n    <Modal\n      isOpen={authModalIsOpen}\n      onRequestClose={closeAuthModal}\n      className='SearchModal'\n      overlayClassName='SearchOverlay'\n      >\n      <div className=\"IoLinks_wrapper\">\n      <div className=\"IoLinks_incoming\">\n      \n      <form onSubmit={(e)=>{\n        e.preventDefault()\n        SubmitLogin()\n      }}>\n          <input name='username' className='greenput_narrow' onChange={(e)=>{\n            setUsername(e.target.value)\n          }}/><br />\n          <input type=\"password\" name='password' className='greenput_narrow' onChange={(e)=>{\n            setPassword(e.target.value)\n          }}/><br />\n          <button className='greenput_narrow' type=\"submit\">Login</button>\n        </form>\n      \n      </div>\n      <div className=\"IoLinks_outgoing\"><h1>NullDisk</h1><ul><li>Military Grade Encryption</li><li>Zettelkasten Schema</li><li>VIM Keybindings</li></ul></div>\n      </div>\n      </Modal>\n  )\n}\n\n// Auth.defaultProps = defaultProps\nexport default Auth;\n","import React, {useState, useEffect,} from 'react';\nimport Auth from './Auth';\nimport ReactHtmlParser from 'react-html-parser';\nimport {IPayload} from './hooks/useApi';\nimport './review.css';\n\n\ninterface IResult {\n  id: number,\n  title: string,\n  content: string,\n  date_created: Date,\n  date_updated: Date,\n  author: number\n}\n\ninterface IDeck {\n  note: IResult,\n  easiness: number,\n  interval: number,\n  repetitions: number,\n  due_date: Date,\n  last_reviewed: Date\n}\n\ninterface ICard {\n  content: string,\n  blanks: Array<{word: string, hidden: boolean}>\n}\n\ninterface IProps {\n  setPayload: (payload:IPayload)=>void,\n  closeModal: ()=>void,\n  updatePostId: (post:number)=>void,\n  backLinks: Array<IResult>\n}\n\n\nfunction Review(props:IProps):JSX.Element {\n\n  const [cards, setCards] = useState<Array<ICard>|null>(null)\n  const [jsxCards, setJsxCards] = useState<Array<any>>([])\n  const [deck, _setDeck] = useState<Array<IDeck>>([])\n  const [due, setDue] = useState<Array<IDeck>>([])\n  const [ignore, setIgnore] = useState<Array<number>>([])\n  const [today, setToday] = useState<Date>(new Date)\n  const [daysAhead, _setDaysAhead] = useState<number>(0)\n  const [quality, _setQuality] = useState<null|number>(null)\n  const [pageIndex, setPageIndex] = useState(0)\n  const [cardIndex, setCardIndex] = useState(0)\n  const [query, setQuery] = useState('')\n\n  function setDeck(_deck:Array<any>){\n    const revs = _deck.map((r)=>{\n      const note =  {...r.note, date_created: new Date(r.note.date_created), date_updated: new Date(r.note.date_updated) } \n      return { ...r, note:note, easiness:parseFloat(r.easiness), due_date: new Date(r.due_date), last_reviewed: new Date(r.last_reviewed) }\n    })\n    _setDeck(revs)\n    console.log(revs)\n  }\n\n  function setQuality(quality:string){\n    if ( quality === '' ) {\n      _setQuality(null)\n    } else {\n      _setQuality(parseInt(quality))\n    }\n  }\n\n  function setDaysAhead(days:any){\n    if(!isNaN(days)){\n      _setDaysAhead(parseInt(days))\n    }\n  }\n\n  function extractCards(content:string):Array<string>{\n    // Extract blocks that contain cards\n    const blocks = content.split(/\\n{2,}/)\n    const cards = blocks.filter((x)=>/:{2,}|__/.test(x))\n    return cards\n  }\n\n  function extractBlanks(card:string):Array<string>{\n    const inline = /[^:]::([^:]*?)(?:\\n|$)/g\n    const blank = /(__\\S.*?\\S__)/g\n    const multiline = /[^:]:::((?:\\s(?!___).*)*)/gm\n    var results = []\n    var match\n    while(match=multiline.exec(card)){\n      results.push({content: match[1].trim(), index:match.index})\n    }\n    while(match=inline.exec(card)){\n      results.push({content: match[1].trim(), index:match.index})\n    }\n    while(match=blank.exec(card)){\n      results.push({content: match[1].trim(), index:match.index})\n    }\n    results.sort((a,b)=>a.index-b.index)\n    return results.map((x)=>x.content)\n  }\n\n  function toggleBlank(cardI:number, blankI:number):void{\n    if(cards !==null ){\n      var cardsObject = cards.map((card,pageIndex)=>{\n        if(pageIndex===cardI){\n          var blankObjects = card.blanks.map((blank,blankIndex)=>{\n            if(blankIndex===blankI){\n              return {...blank, hidden:!blank.hidden}\n            } else {\n              return blank\n            }\n          })\n          return {...card, blanks:blankObjects}\n        } else {\n          return card\n        }\n      })\n      setCards(cardsObject)\n    }\n  }\n\n\n  function submitSearch(event:React.FormEvent){\n    event.preventDefault()\n    props.setPayload({\n      path: 'review/search/?query='+query,\n      method: 'GET',\n      body: null,\n      callback: (res)=>{\n        setDeck(res)\n      }\n    })\n  }\n\n  function submitQuality(event:React.FormEvent){\n    event.preventDefault()\n    if (quality != null){\n      props.setPayload({\n        path: 'review/memorize/',\n        method: 'POST',\n        body: {...due[pageIndex],quality:quality},\n        callback: (res)=>{\n          console.log(res)\n          setIgnore(ignore=>[...ignore,parseInt(res.note.id)])\n        }\n      })\n    }\n  }\n\n  function cforward() { \n    if(cards !==null && cardIndex+2 <= cards.length){\n      setCardIndex(cardIndex+1)\n    }\n  }\n\n  function cbackward() { \n    if(cardIndex > 0){\n      setCardIndex(cardIndex-1)\n    }\n  }\n\n  function pforward() { \n    if(pageIndex+2 <= due.length){\n      setPageIndex(pageIndex+1)\n    }\n  }\n\n  function pbackward() { \n    if(pageIndex-1 >= 0){\n      setPageIndex(pageIndex-1)\n    }\n  }\n\n  function Title():JSX.Element {\n    if(due.length>0){\n      return <>{due[pageIndex].note.title}</>\n    }\n    return <></>\n  }\n\n  useEffect(()=>{\n    var jsxcards:Array<any> = []\n    if (cards !==null ){\n      for( const [pageIndex, {content,blanks}] of cards.entries() ){\n        var contentArray:Array<any> = [content+' ']\n        for( const [blankIndex, {word,hidden}] of blanks.entries() ){\n          var append:any = []\n          for(var i=0; i < contentArray.length; i=i+2){\n            const components = contentArray[i].split(word)\n            const visibility = (hidden)?'hidden':'visible';\n            if(contentArray[i].match(word)){\n              var insert =[]\n              for(var y=0; y < components.length; y++){\n                insert.push(components[y])\n                if(components[y+1]){\n                  insert.push(\n                                  <span className={visibility} onClick={()=>toggleBlank(pageIndex,blankIndex)}>{word}</span>\n                                )\n                }\n              }\n              append.push({key:i, items:insert})\n            }\n          }\n          for(const [i, {key,items}] of append.entries()){\n            contentArray.splice(key,1,...items)\n          }\n        }\n        jsxcards.push(contentArray)\n      }\n    }\n    setJsxCards(jsxcards)\n    // setCardIndex(0)\n  },[cards])\n\n  useEffect(()=>{\n    if(due.length>0){\n      console.log(`Loading card ${pageIndex}`)\n      props.updatePostId(due[pageIndex].note.id)\n      var cards = extractCards(due[pageIndex].note.content).map((card)=>{\n        const blanks = extractBlanks(card).map((blank)=>(\n          {\n            word: blank,\n            hidden: true\n          }\n        ))\n        const cardObject = {\n          content: card,\n          blanks: blanks\n        }\n        return cardObject\n      })\n      setCards(cards)\n      setCardIndex(0)\n    } else {\n      setCards(null)\n    }\n  },[pageIndex,due])\n\n\n  useEffect(()=>{\n    const newPages = deck.filter((x)=>x.repetitions===0)\n    var vDate = new Date(today)\n    vDate.setDate(vDate.getDate() + daysAhead);\n    const overDuePages = deck.filter((x)=>x.repetitions>0 && x.due_date <= vDate)\n    setPageIndex(0)\n    setCardIndex(0)\n    setDue([...newPages,...overDuePages].filter(x=>!ignore.includes(x.note.id)))\n    console.log(today)\n  },[deck,today,daysAhead,ignore])\n\n\n  return(\n    <>\n\n          <form onSubmit={submitSearch}>\n          <input className=\"greenput\" type=\"text\" placeholder=\"Search for Deck\" onChange={(e)=>setQuery(e.target.value)}/>\n          </form>\n\n            <div className=\"review_bar\">\n            <div>            <input className=\"greenput_tight\" placeholder=\"Advance Days\" type=\"text\" onChange={(e)=>setDaysAhead(e.target.value)} /></div>\n            <div>Deck: {deck.length}</div>\n            <div> Due: {due.length}</div>\n            <div>Done: {ignore.length}</div>\n            <div>Cards: { cards != null ? (<>{cardIndex+1}/{ cards.length }</>):(<>None</>)}</div>\n            </div>\n          <br />\n          <div className=\"main_buttons_wrapper\">\n            <div className=\"button\" onClick={cbackward}>Prev Card</div>\n            <div className=\"button\" onClick={cforward}>Next Card</div>\n            <div className=\"button\" onClick={pbackward}>Prev Deck</div>\n            <div className=\"button\" onClick={pforward}>Next Deck</div>\n            <div className=\"button\" onClick={()=>props.closeModal()}>Main</div>\n          </div>\n\n          <h1><Title/></h1>\n          <pre>\n          {jsxCards[cardIndex]}\n          </pre>\n          {cards !=null && cardIndex+1===cards.length &&\n          <form onSubmit={submitQuality}>\n          <select className=\"greenput_narrow\" id=\"quality\" onChange={(e)=>setQuality(e.target.value)}>\n          <option value=\"\">---</option>\n          <option value=\"5\">Easy</option>\n          <option value=\"4\">Correct with hessitation</option>\n          <option value=\"3\">Correct but difficult</option>\n          <option value=\"2\">Incorrect, but almost</option>\n          <option value=\"0\">Incorrect, blackout</option>\n          </select>\n          &nbsp;<input className=\"greenput_narrow\" type=\"submit\" value=\"Submit\" />\n          </form>\n          }\n\n    </>\n  )\n}\n\nexport default Review;\n","import React, {useState, useEffect, useRef, useLayoutEffect} from 'react';\nimport useApi, {IPayload} from './hooks/useApi';\nimport Modal from 'react-modal'\nimport Vim from './Vim';\nimport Auth from './Auth';\nimport Review from './Review';\nimport './Main.css';\nimport './modal.css';\nvar dateFormat = require(\"dateformat\");\nModal.setAppElement('#root')\n\ntype orderByDate = 'date_created'|'date_updated'\ntype sortType = 'DESC'|'ASC'\n\ninterface ISearchFilters {\n  primary: string,\n  when: string,\n  date: null|Date,\n  order_by: orderByDate,\n  sort: sortType,\n}\n\ninterface IResult {\n  id: number,\n  title: string,\n  content: string,\n  date_created: Date,\n  date_updated: Date,\n  author: number\n}\n\nfunction Main():JSX.Element { \n\n  const [postId,updatePostId] = useState<number|null>(null)\n  const [content, updateContent] = useState<string>('');\n  const [auth, updateAuth] = useState<boolean>(false)\n  const [authModalIsOpen, setAuthModal] = useState(false)\n  const [searchPanelIsOpen, setSearchPanelIsOpen] = useState(false)\n  const [reviewPanelIsOpen, setReviewPanelIsOpen] = useState(false)\n  const [query, setQuery] = useState('')\n  const [results, setResults] = useState<null|Array<IResult>>(null)\n  const [previewId, setPreviewId] = useState<null|number>(null)\n  const [newChanges, setNewChanges] = useState(false)\n  const [alertText, setAlertText] = useState('')\n  const [safeChangeCallback, setSafeChangeCallback] = useState<null|(()=>void)>(null)\n  const [dialogChangesIsOpen, setDialogChangesIsOpen] = useState(false)\n  const [IoLinksIsOpen, setIoLinksIsOpen] = useState(false)\n  const [incomingLinks, setIncomingLinks] = useState<Array<IResult>>([])\n  const [outgoingLinks, setOutgoingLinks] = useState<Array<IResult>>([])\n  const defaultFilters:ISearchFilters = {\n    primary: 'date_created',\n    when: 'after',\n    date: null,\n    order_by: 'date_created',\n    sort: 'DESC'\n  }\n  const [searchFilters, setSearchFilters] = useState<ISearchFilters>(defaultFilters)\n\n  const vimRef = useRef<Vim>(null)\n\n  const [payload, setPayload] = useState<IPayload>({\n    path: '',\n    method: 'GET',\n    body: null,\n    callback: ()=>null\n  })\n  //useApi(opts, payload)\n\n  function closeAuthModal(){\n    if(vimRef.current){\n      vimRef.current.focus()\n    }\n  }\n\n  function _setResults(res:Array<any>){\n    var parsed_results:Array<IResult> = res.map(x=>({\n      ...x,\n      date_created: new Date(x.date_created),\n      date_updated: new Date(x.date_updated),\n    }))\n    return setResults(parsed_results)\n  }\n\n  function write(Content:string, callback:()=>void){\n    console.log('write function called')\n    // This function is passed to vim for :w\n    // It must distinguish between a new file vs saving a new file\n    if(postId === null){\n      var pl = {\n        path: 'notes/',\n        method: 'POST',\n        body: {content: Content},\n      }\n    } else {\n      var pl = {\n        path: 'notes/'+postId+'/',\n        method: 'PUT',\n        body: {content: Content},\n      }\n    }\n    const PayLoad = {...pl, callback:(res:any)=>{\n      updatePostId(res.id)\n      getOutLinks()\n      setNewChanges(false)\n      // dev: try and extract the filename and print it on the status bar\n      if(typeof(res.id)==='number'){\n        // Do some callback magic\n        callback()\n      }\n      console.log(res)\n    }}\n\n    setPayload(PayLoad)\n  }\n\n  function quit(override=false){\n\n    const PayLoad = {\n      path: '',\n      method: 'logout',\n      body: '',\n      callback:(res:null)=>{\n        updatePostId(null)\n        if(vimRef.current){\n          vimRef.current.flush('')\n        }\n        updateAuth(false)\n        setAuthModal(true)\n      }\n    }\n    if(override){\n      setPayload(PayLoad)\n    } else{\n      safeClose(()=>{\n        setPayload(PayLoad)\n      })\n    }\n  }\n\n\n  function safeClose(callback:()=>void){\n    if(newChanges === false){\n      callback()\n    } else {\n      setAlertText('Warning! You have unsaved changes.')\n      setSafeChangeCallback(()=>()=>callback())\n    }\n  }\n\n  function newFile(){\n      safeClose(()=>{\n        updatePostId(null)\n        setIncomingLinks([])\n        setOutgoingLinks([])\n        if(vimRef.current){\n          vimRef.current.flush('')\n        }\n        setNewChanges(false)\n      })\n  }\n  \n  function openDocument(){\n    if(previewId){\n      // check for unsaved changes\n      setSearchPanelIsOpen(false)\n      setIoLinksIsOpen(false)\n      \n      safeClose(()=>{\n        updatePostId(previewId)\n        setPreviewId(null)\n      })\n    }\n  }\n\n\n  function insertDocument(){\n    if(results){\n      const result = results.filter(x=>x['id']==previewId)[0]\n      var itext = '['+result['title']+']'+'(VID='+result['id']+')'\n      if(vimRef.current){\n        vimRef.current.insert(itext)\n        setSearchPanelIsOpen(false)\n      }\n    }\n  }\n  function deleteDocument(){\n    const payload = {\n      path: 'notes/'+previewId+'/delete/',\n      method: 'GET',\n      body: null,\n      callback:(res:any)=>{\n        if(res.delete !== false){\n          if(results !== null){\n            setResults(results.filter(x=>x.id != res.delete))\n            setPreviewId(null)\n          }\n        }\n      }\n    }\n    setAlertText('Are you sure you want to delete this forever?')\n    setSafeChangeCallback(()=>()=>{\n      setPayload(payload)\n    })\n  }\n\n\n  function getBacklinks(){\n    const payload = {\n      path: 'notes/'+postId+'/getBacklinks/',\n      method: 'GET',\n      body: null,\n      callback:(res:any)=>{\n        setIncomingLinks(res)\n      }\n    }\n    setPayload(payload)\n  }\n\n  function getOutLinks(){\n    console.log('getting outlinks')\n    const payload = {\n      path: 'notes/'+postId+'/getOutlinks/',\n      method: 'GET',\n      body: null,\n      callback:(res:any)=>{\n        console.log(res)\n        setOutgoingLinks(res)\n      }\n    }\n    setPayload(payload)\n  }\n\n  function executeQuery(){\n    const payload = {\n      path: 'notes/search/?query='+query,\n      method: 'GET',\n      body: null,\n      callback: (res:any)=>{\n        console.log(res)\n        _setResults(res)\n        // Todo handle null results\n      }\n    }\n    setSearchFilters(defaultFilters)\n    setPayload(payload)\n    setPreviewId(null)\n  }\n\n  useEffect(()=>{\n    console.log(postId)\n    console.log(auth)\n\n    if(auth && postId){\n      console.log('selected new post:'+postId)\n      // logged in & postId has changed...\n      const payload = {\n        path: 'notes/'+postId+'/',\n        method: 'GET',\n        body: null,\n        callback: (result:any)=> {\n          console.log('got a new result!')\n          updateContent(result.content)\n          getBacklinks()\n          getOutLinks()\n          setNewChanges(false)\n        }\n      }\n      setPayload(payload)\n      // getBacklinks()\n    }\n  },[postId])\n\n  useEffect(()=>{\n    // when content is updated, trigger reload by changing the VimKey\n    if(vimRef.current){\n      vimRef.current.flush(content)\n    }\n  },[content])\n\n  useEffect(()=>{\n    console.log(searchFilters)\n  },[searchFilters])\n\n  useEffect(()=>{\n    console.log('Safe Change Callback Set')\n    if(safeChangeCallback !== null){\n      setDialogChangesIsOpen(true)\n    }\n  },[safeChangeCallback])\n\n  function resultRows(data:Array<IResult>){\n    return(\n      <div>{data !== null &&\n        data.map(row=>{\n        var selectedPreview = row['id'] == previewId ? 'selectedRow':''\n        return (\n          <div className={'searchResult '+selectedPreview} onClick={()=>{\n            if(previewId==row['id']){\n              setPreviewId(null)\n            } else{\n              setPreviewId(row['id'])\n            }\n          }}>\n            <div className=\"searchResults_wrapper\">\n              <div className=\"searchResultTitle\">{row['title']}</div>\n              <div className=\"searchResultDate\">{dateFormat(row[searchFilters.order_by],'dd/mmm/yyyy')}</div>\n\n              </div>\n          </div>\n        )\n      })}</div> \n    )\n  }\n\n  function filteredResults(results:Array<IResult>){\n    var fresults = results.filter(x=>{\n      if(searchFilters.date!==null){\n        if(searchFilters.when==='before'){\n          return x[searchFilters.order_by] <= searchFilters.date\n        }\n        if(searchFilters.when==='after'){\n          return x[searchFilters.order_by] >= searchFilters.date\n        }\n      } else {\n        return true\n      }\n    })\n    fresults.sort((a,b)=>{\n      if(searchFilters.sort==='ASC'){\n        return a[searchFilters.order_by].getTime()-b[searchFilters.order_by].getTime()\n      } else {\n        return b[searchFilters.order_by].getTime()-a[searchFilters.order_by].getTime()\n      }\n    })\n    return fresults\n  }\n\n\n  return (\n    <div className='main'>\n    <Auth payload={payload} setPayload={setPayload} setAuth={updateAuth} closeAction={closeAuthModal}/>\n      <Vim  content={content} save={write} quit={quit} ref={vimRef} changesCallback={setNewChanges}/>\n        \n        <Modal\n        isOpen={reviewPanelIsOpen}\n        onRequestClose={()=>{}}\n        className='DarkModal'\n        overlayClassName='OpaqueOverlay'\n        >\n        <Review \n        setPayload={setPayload} \n        closeModal={()=>{\n          setReviewPanelIsOpen(false)\n          if(vimRef.current){\n            vimRef.current.focus()\n          }\n        }} \n        updatePostId={updatePostId}\n        backLinks={[...outgoingLinks,...incomingLinks]}\n        />\n        </Modal>\n\n        <Modal\n        isOpen={searchPanelIsOpen}\n        onRequestClose={()=>{\n          setSearchPanelIsOpen(false)\n          if(vimRef.current){\n            vimRef.current.focus()\n          }\n\n            \n        }}\n        className='SearchModal'\n        overlayClassName='SearchOverlay'\n        >\n          <div className=\"searchBox\">\n            <form action=\"#\" autoComplete=\"off\" onSubmit={(e)=>{\n              e.preventDefault()\n              executeQuery()\n            }}>\n            <input className='greenput' name=\"query\" autoFocus onChange={(e)=>setQuery(e.target.value)}/>\n            <select className='greenput_narrow' onChange={(e)=>setSearchFilters({...searchFilters,primary:e.target.value})}>\n              <option value='date_created'>Created</option>\n              <option value=\"date_updated\">Updated</option>\n            </select>\n            <select className='greenput_narrow' onChange={(e)=>setSearchFilters({...searchFilters,when:e.target.value})}>\n              <option value=\"after\">After</option>\n              <option value=\"before\">Before</option>\n            </select>\n            <input className='greenput_narrow' type=\"date\" onChange={(e)=>setSearchFilters({...searchFilters,date:(e.target.value===''?null:new Date(e.target.value))})} />\n            &nbsp; :: &nbsp;\n            <select className='greenput_narrow' onChange={(e)=>setSearchFilters({...searchFilters,order_by:e.target.value as orderByDate})}>\n              <option value='date_created'>Created</option>\n              <option value=\"date_updated\">Updated</option>\n            </select>\n            <select className='greenput_narrow' onChange={(e)=>setSearchFilters({...searchFilters,sort:e.target.value as sortType})}>\n              <option value=\"DESC\">DESC</option>\n              <option value=\"ASC\">ASC</option>\n            </select>\n            </form>\n\n          {previewId !==null &&\n          <div className=\"searchButtonsWrapper\">\n            <div className=\"button_open button\" onClick={openDocument}>Open</div>\n            <div className=\"button_insert button\" onClick={insertDocument}>Insert</div>\n            <div className=\"button_delete button\" onClick={deleteDocument}>Delete</div>\n          </div>\n          }\n\n          <div className=\"searchResults\">\n          {results !==null && results.some(x=>x) &&\n            resultRows(filteredResults(results))\n          }\n          </div>\n          <div className=\"spacer\"></div>\n          <div className=\"searchPreview\"><pre>\n          {previewId !== null && results !==null &&\n            results.filter(x=>x['id']==previewId).map(prev=>prev['content']) \n          }\n          {previewId ===null && (<span>search for a document to preview it here</span>)}\n          </pre></div>\n          </div>\n        </Modal>\n\n        <Modal isOpen={ dialogChangesIsOpen } className=\"SearchModal\" overlayClassName=\"SearchOverlay\"><div className=\"alertBox\">\n          <span className=\"alertText\">{alertText}</span>\n          <div className=\"button\" onClick={()=>{\n            if(safeChangeCallback !==null){\n              safeChangeCallback()\n            }\n            setDialogChangesIsOpen(false)\n          }}>Override</div>\n          <div className=\"button\" onClick={()=>setDialogChangesIsOpen(false)}>Abort</div>\n          </div></Modal>\n\n          <Modal isOpen={IoLinksIsOpen} className=\"SearchModal\" overlayClassName=\"SearchOverlay\" onRequestClose={()=>{ \n            setIoLinksIsOpen(false)\n            if(vimRef.current){\n              vimRef.current.focus()\n            }\n          }}>\n        <div className=\"IoLinks_wrapper\">\n        <div className=\"IoLinks_navigation\">\n          {(previewId && incomingLinks !==null && outgoingLinks !==null) && (incomingLinks.filter(x=>x['id']==previewId).length>0 || outgoingLinks.filter(x=>x['id']==previewId).length>0) &&\n            <div className=\"button\" onClick={openDocument}>Open</div>\n          }\n        </div>\n        <div className=\"IoLinks_incoming\"><span className=\"title\">Incoming Links</span>\n            {incomingLinks !==null && \n            resultRows(incomingLinks)}\n          </div>\n          <div className=\"IoLinks_outgoing\"><span className=\"title\">Outgoing Links</span>\n            {outgoingLinks !==null &&\n            resultRows(outgoingLinks)}\n          </div>\n          <div className=\"IoLinks_preview\">\n            <pre>\n              {previewId && incomingLinks &&\n                incomingLinks.filter(object=>object['id']==previewId).map(res=>res['content'])\n              }\n              {previewId && outgoingLinks &&\n                outgoingLinks.filter(object=>object['id']==previewId).map(res=>res['content'])\n              }\n            </pre>\n          </div>\n        </div>\n        </Modal>\n\n          <div className=\"main_buttons_wrapper\">\n            <div className=\"button\" onClick={()=>setSearchPanelIsOpen(true)}>Explorer</div>\n            <div className=\"button\" onClick={()=>setReviewPanelIsOpen(true)}>Review</div>\n            <div className=\"button\" onClick={()=>newFile()}>New File</div>\n            <div className=\"button\" onClick={()=>setIoLinksIsOpen(true)}><span style={(incomingLinks.length>0||outgoingLinks.length>0) ? ({color:'red', fontWeight:'bold'}) : ({}) }>Connections { incomingLinks.length}/{outgoingLinks.length}</span></div>\n          </div>\n    </div>\n  )\n}\n\nexport default Main\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createAction } from '@reduxjs/toolkit'\nimport {IPayload} from '../../hooks/useApi'\n\nexport const setUsername = createAction<string>('auth/setUsername')\nexport const setPassword = createAction<string>('auth/setPassword')\nexport const setModalOpen = createAction<boolean>('auth/setModalOpan')\n","import { createReducer } from '@reduxjs/toolkit'\nimport {setUsername, setPassword, setModalOpen} from './actions'\n\nexport interface IAuth{\n  username: string;\n  password: string;\n  modalOpen: boolean;\n}\n\nconst initialState:IAuth = {\n  username: '',\n  password: '',\n  modalOpen: false\n}\n\nexport const store = createReducer(initialState, (builder) =>\n  builder\n    .addCase(setUsername, (state, action) => ({\n      ...state,\n      username: action.payload,\n    }))\n    .addCase(setPassword, (state, action) => ({\n      ...state,\n      password: action.payload,\n    }))\n    .addCase(setModalOpen, (state, action) => ({\n      ...state,\n      modalOpen: action.payload,\n    }))\n);\n\nexport default store\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport payload from './auth/reducer'\n\nexport const store = configureStore({\n  reducer: {payload}\n})\n\nexport type AppDispatch = typeof store.dispatch;\nexport type AppState = ReturnType<typeof store.getState>\nexport type RootState = ReturnType<typeof store.getState>\n","import './index.css'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './Main';\nimport reportWebVitals from './reportWebVitals';\nimport {store} from './state/index'\nimport {Provider} from 'react-redux'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={store}>\n  <Router><Switch>\n\n\n  <Route path='/'>\n  <Main />\n  </Route>\n\n  </Switch></Router>\n  </Provider>\n  </React.StrictMode>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}