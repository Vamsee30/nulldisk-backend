{"version":3,"sources":["config.js","hooks/useApi.tsx","Vim.tsx","Main.tsx","reportWebVitals.ts","index.tsx"],"names":["apiUrl","console","log","useApi","props","payload","useState","accessKey","setAccessKey","createPersistedState","useRefreshKeyState","refreshKey","setRefreshKey","refreshKeyIsValid","setRefreshKeyIsValid","accessKeyIsValid","setAccessKeyIsValid","validHttpCodes","go","useCallback","callback","body","method","path","options","headers","JSON","stringify","fetch","then","response","includes","status","json","useEffect","access","username","password","refresh","fail","require","Vim","codeInput","React","createRef","editor","insert","text","doc","getDoc","cursor","getCursor","replaceRange","flush","setValue","setState","currentSig","md5","lastSig","writeStatus","insert_image","line","src","width","element","document","createElement","addLineWidget","above","noHScroll","reload_images","pattern","lines","state","content","split","active_widgets","widgets","map","x","widget","clear","i","length","match","exec","image","title","parseInt","url","push","vimrc","CodeMirror","mapCommand","context","image_reload","image_disable","quit","wquit","save","commands","changesCallback","highlight","setTimeout","statusBars","className","commandDisplay","vimMode","render","statusBar","id","name","ref","defaultMsg","this","current","fromTextArea","mode","keyMap","theme","lineNumbers","showCursorWhenSelecting","lineWrapping","keys","on","edit","data","getValue","sig","key","e","Component","defaultProps","dateFormat","Modal","setAppElement","Main","postId","updatePostId","updateContent","auth","updateAuth","authModalIsOpen","setAuthModal","setUsername","setPassword","searchPanelIsOpen","setSearchPanelIsOpen","query","setQuery","results","setResults","previewId","setPreviewId","newChanges","setNewChanges","alertText","setAlertText","safeChangeCallback","setSafeChangeCallback","dialogChangesIsOpen","setDialogChangesIsOpen","IoLinksIsOpen","setIoLinksIsOpen","incomingLinks","setIncomingLinks","outgoingLinks","setOutgoingLinks","primary","when","date","order_by","sort","searchFilters","setSearchFilters","vimRef","useRef","opts","defaultPayload","loginAction","setPayload","res","safeClose","openDocument","getOutLinks","executeQuery","parsed_results","date_created","Date","date_updated","_setResults","resultRows","row","selectedPreview","onClick","result","Content","pl","PayLoad","override","isOpen","onRequestClose","overlayClassName","onSubmit","preventDefault","onChange","target","value","type","action","autoComplete","autoFocus","filter","itext","delete","some","fresults","a","b","getTime","filteredResults","prev","object","style","color","fontWeight","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c44bc189.chunk.js","sourcesContent":["const dev = 'http://127.0.0.1:8000/api/'\nconst prod = '/api/'\n\nexport const apiUrl = process.env.NODE_ENV === 'development' ? dev:prod\n","import {useState, useEffect, useCallback} from 'react'\nimport createPersistedState from 'use-persisted-state'\nimport {apiUrl} from '../config'\nconsole.log(\"MODE: \"+apiUrl)\nexport interface IProps {\n    username:string,\n    password:string,\n    fail: ()=>void\n}\n\nexport interface IPayload {\n    path:string,\n    method:string,\n    body:{}|null,\n    callback: (result:any)=>any,\n}\n\nfunction useApi(props:IProps, payload:IPayload){\n\n    const [accessKey, setAccessKey] = useState('')\n    const useRefreshKeyState = createPersistedState('refreshKey')\n    const [refreshKey, setRefreshKey] = useRefreshKeyState('')\n    //const [refreshKey, setRefreshKey] = useState('')\n    const [refreshKeyIsValid, setRefreshKeyIsValid] = useState<null|boolean>(null)\n    // const apiUrl = 'http://127.0.0.1:8000/api/'\n    // const apiUrl = '/api/'\n    const [accessKeyIsValid, setAccessKeyIsValid] = useState<null|boolean>(null)\n\n    const validHttpCodes = [200, 201, 202, 203, 204]\n    \n    const go = useCallback((accessKey)=>{\n        const {body, method, path} = payload\n        console.log('executing GO:'+accessKey)\n        if(method === 'logout'){\n            return logout(payload.callback)\n        }\n        const options = {\n            method: method,\n            headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer '+accessKey,\n            },\n            ... (body !== null) && { body: JSON.stringify(body) }\n        }\n        fetch(apiUrl+path,options)\n        .then(response=>{\n            if(!validHttpCodes.includes(response.status)){\n                setAccessKeyIsValid(false)\n            } else {\n                setAccessKeyIsValid(true)\n                response.json()\n                .then(response=>{\n                    payload.callback(response)\n                })\n            }\n        })\n    },[payload])\n\n    function logout(callback:(response:null)=>void){\n        setRefreshKey('')\n        setAccessKey('')\n        setRefreshKeyIsValid(null)\n        setAccessKeyIsValid(null)\n        callback(null)\n    }\n\n    useEffect(()=>{\n        if(accessKeyIsValid===false){\n            console.log('access key is false')\n            // We tried to make a request, but our key is invalid.\n            // We need to use the refresh key\n            const options = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json', },\n                body: JSON.stringify( {'refresh': refreshKey} ),\n            }\n            fetch(apiUrl+'token/refresh/', options)\n            .then(response=>{\n                if(!validHttpCodes.includes(response.status)){\n                    setRefreshKeyIsValid(false)\n                    // this needs to trigger a login event\n                } else {\n                    response.json()\n                    .then(response=>{\n                        setRefreshKeyIsValid(true)\n                        setAccessKey(response.access)\n                        // setAccessKeyIsValid(true)\n                    })\n                }\n            })\n        }\n    },[accessKeyIsValid])\n\n\n    useEffect(()=>{\n        console.log('responding to change in access key:'+accessKey)\n        go(accessKey)\n    },[accessKey,payload])\n\n    useEffect(()=>{\n        if(refreshKeyIsValid===false){\n            // even after trying to login, the RK is invalid\n            // We must straight up log in.\n            const options = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    username: props.username,\n                    password: props.password,\n                 })\n            }\n            fetch(apiUrl+'token/', options)\n            .then(response=>{\n                console.log(response.status)\n                if(!validHttpCodes.includes(response.status)){\n                    setAccessKeyIsValid(null)\n                    setRefreshKeyIsValid(null)\n                    props.fail()\n                    console.log('total fail')\n                }\n                else { \n                    console.log('login works')\n                    response.json()\n                    .then(response=>{\n                        setAccessKey(response.access)\n                        setRefreshKey(response.refresh)\n                        // setRefreshKeyIsValid(true)\n                        // setAccessKeyIsValid(true) // Commenting this out disables the loop\n                    })\n                }\n            })\n        }\n\n        \n    },[refreshKeyIsValid])\n\n};\n\nexport default useApi\n","import React, {useImperativeHandle} from 'react';\nimport './index.css';\nimport './Vim.css';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/the-matrix.css';\nimport 'codemirror/addon/dialog/dialog.css';\nimport CodeMirror from 'codemirror';\nimport md5 from 'md5';\n//import CodeMirror from '@jkvim/react-codemirror2'\n//require('codemirror/lib/codemirror.js');\nrequire('codemirror/mode/markdown/markdown.js');\nrequire('codemirror/mode/gfm/gfm.js');\nrequire('codemirror/mode/javascript/javascript');\nrequire('codemirror/keymap/vim.js');\nrequire('codemirror/addon/dialog/dialog.js');\nrequire('codemirror/addon/search/searchcursor.js');\nrequire('codemirror/mode/clike/clike.js');\nrequire('codemirror/addon/edit/matchbrackets.js');\n\ninterface IProps{\n  content: string,\n  defaultMsg: string,\n  writeStatus: string,\n  save: (content:string,callback:()=>void)=>void;\n  quit: (override:boolean)=>void;\n  changesCallback: (x:boolean)=>void; // lets parent know when changes have been made\n  ref: React.MutableRefObject<Vim|null>,\n}\ninterface IState{\n  content: string,\n  currentSig: string,\n  lastSig: string,\n  writeStatus: string,\n  commandDisplay: string,\n  vimMode: string,\n  widgets: Array<IWidget>,\n  highlight: boolean,\n}\n\ninterface IWidget {\n  title: string,\n  width: number|null,\n  url: string,\n  line: number,\n  widget: null|any,\n}\n\n\nclass Vim extends React.Component<IProps, IState> {\n\n  private codeInput = React.createRef<HTMLTextAreaElement>();\n  private editor:CodeMirror.Editor|null;\n  \n  static defaultProps = {\n    content: '',\n    defaultMsg: '93',\n    writeStatus: 'File written to database!',\n    save: (content:string)=>{},\n    changesCallback: (x:boolean)=>{},\n  }\n\n  constructor(props: IProps){\n    super(props);\n    this.state = {\n      content: this.props.content,\n      currentSig: '',\n      lastSig: '',\n      writeStatus: this.props.defaultMsg,\n      commandDisplay: '',\n      vimMode: 'normal',\n      widgets: [],\n      highlight: false,\n    }\n    this.editor = null;\n    this.vimrc();\n  }\n\n  componentDidMount(){\n\n    if(this.codeInput.current){\n\n      this.editor = CodeMirror.fromTextArea(this.codeInput.current,{mode:'gfm', keyMap:'vim',theme:'the-matrix', lineNumbers:true, showCursorWhenSelecting: true, lineWrapping:true});\n      var keys = '';\n      this.editor.getDoc().setValue(this.props.content)\n      this.editor.on(\"change\",(edit)=>{\n        const data = edit.getValue()\n        const sig = md5(data)\n        this.setState({\n          content:data,\n          currentSig: sig\n        });\n        if(this.state.lastSig !== sig){\n          this.setState({writeStatus:'Unsaved changes...'})\n          this.props.changesCallback(true)\n        } else{\n          this.setState({writeStatus:'No changes made'})\n          this.props.changesCallback(false)\n        }\n      });\n\n      CodeMirror.on(this.editor, 'vim-keypress', (key:string)=>{\n        keys = keys + key;\n        this.setState({commandDisplay:keys})\n      });\n\n      CodeMirror.on(this.editor, 'vim-command-done', (e:any)=> {\n        keys = '';\n        this.setState({commandDisplay:keys})\n      });\n\n      CodeMirror.on(this.editor, 'vim-mode-change', (e:any)=> {\n        this.setState({vimMode:e.mode})\n      });\n    \n    }\n\n  }\n\n  insert = (text:string) => {\n    if(this.editor){\n      var doc = this.editor.getDoc()\n      var cursor = doc.getCursor()\n      doc.replaceRange(text,cursor)\n    }\n  }\n\n\n  flush = (text:string) => {\n    if(this.editor){\n      var doc = this.editor.getDoc()\n      doc.setValue(text)\n      this.setState({\n        currentSig:md5(text),\n        lastSig:md5(text)\n      })\n\n      this.setState({writeStatus:'All Systems Go!'})\n      console.log('flushed data')\n    }\n  }\n\n  insert_image = (line:number,src:string,width:null|number) => {\n    if(this.editor){\n      var doc = this.editor.getDoc()\n      const element = document.createElement('img')\n      element.src= src\n      console.log(width)\n      if(width){\n        element.width=width\n      }\n      return doc.addLineWidget(line, element,{above:false, noHScroll:true})\n    }\n  }\n\n  reload_images = () => {\n    var pattern = /!\\[(.*?)\\](\\[width=(\\d{1,})\\])?\\((.*)\\)/\n    var lines = this.state.content.split('\\n')\n    var active_widgets:Array<IWidget> = []\n    this.state.widgets.map(x=>x.widget.clear())\n    for(var i=0;i<lines.length; i++){\n      var match = pattern.exec(lines[i])\n      if(match){\n        var image = {\n          title: match[1],\n          width: (match[3]===null)?null:parseInt(match[3]),\n          url: match[4],\n          line: i+1,\n          widget: this.insert_image(i+1,match[4],(match[3]===null)?null:parseInt(match[3]))\n        }\n        console.log(image)\n        active_widgets.push(image)\n      }\n    }\n    this.setState({\n      widgets:active_widgets\n    })\n  }\n\n\n  vimrc = () =>{\n    CodeMirror.Vim.map('J', '5j', 'normal')\n    CodeMirror.Vim.map('K', '5k', 'normal')\n    CodeMirror.Vim.mapCommand('jk', 'action', 'exitInsertMode', {}, { context: 'insert' });\n\n    CodeMirror.Vim.mapCommand('U', 'action', 'redo', {}, { context: 'normal' });\n\n    CodeMirror.Vim.image_reload = ()=>{\n      this.reload_images()\n    }\n    CodeMirror.Vim.image_disable = () => {\n      this.state.widgets.map(x=>x.widget.clear())\n    }\n    CodeMirror.Vim.quit = () => {\n      this.props.quit(false)\n    }\n    CodeMirror.Vim.wquit = () => {\n      this.props.save(this.state.content,()=>this.props.quit(true))\n    }\n    CodeMirror.commands.save = ()=>{\n      this.props.save(this.state.content,()=>{\n        this.props.changesCallback(false)\n        this.setState({\n          writeStatus:this.props.writeStatus,\n          lastSig: md5(this.state.content),\n          highlight: true,\n        });\n        setTimeout(()=>{\n          this.setState({highlight: false})\n        }, 1000)\n      })\n    };\n  }\n  \n\n  statusBars = () => {\n    const highlight = this.state.highlight ? 'green_highlight':''\n    return (\n      <div className={`statusBar_wrapper ${highlight}`}>\n      <div className=\"statusBar_write\">{this.state.writeStatus}</div>\n        <div className=\"statusBar_buffer\">Key buffer: {this.state.commandDisplay}</div>\n        <div className=\"statusBar_mode\">Vim mode: { this.state.vimMode }</div>\n      </div>\n    )\n  }\n\n  render = () => {\n    const statusBar = this.statusBars()\n    return(\n      <div className=\"vim\">\n        <textarea id=\"code\" name=\"code\" className=\"code\" ref={this.codeInput} ></textarea>\n        {statusBar}\n      </div>\n    )\n  }\n}\n\nexport default Vim;\n","import React, {useState, useEffect, useRef, useLayoutEffect} from 'react';\nimport useApi, {IPayload} from './hooks/useApi';\nimport Modal from 'react-modal'\nimport Vim from './Vim';\nimport './Main.css';\nimport './modal.css';\nvar dateFormat = require(\"dateformat\");\nModal.setAppElement('#root')\n\ntype orderByDate = 'date_created'|'date_updated'\ntype sortType = 'DESC'|'ASC'\ninterface ISearchFilters {\n  primary: string,\n  when: string,\n  date: null|Date,\n  order_by: orderByDate,\n  sort: sortType,\n}\n\ninterface IResult {\n  id: number,\n  title: string,\n  content: string,\n  date_created: Date,\n  date_updated: Date,\n  author: number\n}\n\nfunction Main():JSX.Element { \n\n  const [postId,updatePostId] = useState<number|null>(null)\n  const [content, updateContent] = useState<string>('');\n  const [auth, updateAuth] = useState<boolean>(false)\n  const [authModalIsOpen, setAuthModal] = useState(false)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [vimKey, setVimKey] = useState(1)\n  const [searchPanelIsOpen, setSearchPanelIsOpen] = useState(false)\n  const [query, setQuery] = useState('')\n  const [results, setResults] = useState<null|Array<IResult>>(null)\n  const [previewId, setPreviewId] = useState<null|number>(null)\n  const [newChanges, setNewChanges] = useState(false)\n  const [alertText, setAlertText] = useState('')\n  const [safeChangeCallback, setSafeChangeCallback] = useState<null|(()=>void)>(null)\n  const [dialogChangesIsOpen, setDialogChangesIsOpen] = useState(false)\n  const [IoLinksIsOpen, setIoLinksIsOpen] = useState(false)\n  const [incomingLinks, setIncomingLinks] = useState<Array<IResult>>([])\n  const [outgoingLinks, setOutgoingLinks] = useState<Array<IResult>>([])\n  const [searchFilters, setSearchFilters] = useState<ISearchFilters>({\n    primary: 'date_created',\n    when: 'after',\n    date: null,\n    order_by: 'date_created',\n    sort: 'DESC'\n  })\n\n  const vimRef = useRef<Vim>(null)\n\n  const apiUrl = '/'\n\n  const opts = {\n    username: username,\n    password: password,\n    fail: forceLogin\n  }\n\n  const defaultPayload = {\n    path: 'notes/validateAuth/',\n      method: 'GET',\n      body: null,\n      callback: loginAction\n  }\n\n  const [payload, setPayload] = useState<IPayload>(defaultPayload)\n  useApi(opts, payload)\n\n\n  function loginAction(res:any){\n    updateAuth(true)\n    setAuthModal(false)\n    setUsername(res.auth)\n  }\n  function openAuthModal(){ setAuthModal(true) }\n  function closeAuthModal(){\n    if(auth){ setAuthModal(false) }\n  }\n\n  function _setResults(res:Array<any>){\n    var parsed_results:Array<IResult> = res.map(x=>({\n      ...x,\n      date_created: new Date(x.date_created),\n      date_updated: new Date(x.date_updated),\n    }))\n    return setResults(parsed_results)\n  }\n\n  function write(Content:string, callback:()=>void){\n    console.log('write function called')\n    // This function is passed to vim for :w\n    // It must distinguish between a new file vs saving a new file\n    if(postId === null){\n      var pl = {\n        path: 'notes/',\n        method: 'POST',\n        body: {content: Content},\n      }\n    } else {\n      var pl = {\n        path: 'notes/'+postId+'/',\n        method: 'PUT',\n        body: {content: Content},\n      }\n    }\n    const PayLoad = {...pl, callback:(res:any)=>{\n      updatePostId(res.id)\n      getOutLinks()\n      setNewChanges(false)\n      // dev: try and extract the filename and print it on the status bar\n      if(typeof(res.id)==='number'){\n        // Do some callback magic\n        callback()\n      }\n      console.log(res)\n    }}\n\n    setPayload(PayLoad)\n  }\n\n  function quit(override=false){\n\n    const PayLoad = {\n      path: '',\n      method: 'logout',\n      body: '',\n      callback:(res:null)=>{\n        updatePostId(null)\n        if(vimRef.current){\n          vimRef.current.flush('')\n        }\n        updateAuth(false)\n        setAuthModal(true)\n      }\n    }\n    if(override){\n      setPayload(PayLoad)\n    } else{\n      safeClose(()=>{\n        setPayload(PayLoad)\n      })\n    }\n  }\n\n\n  function safeClose(callback:()=>void){\n    if(newChanges === false){\n      callback()\n    } else {\n      setAlertText('Warning! You have unsaved changes.')\n      setSafeChangeCallback(()=>()=>callback())\n    }\n  }\n\n  function newFile(){\n      safeClose(()=>{\n        updatePostId(null)\n        setIncomingLinks([])\n        setOutgoingLinks([])\n        if(vimRef.current){\n          vimRef.current.flush('')\n        }\n        setNewChanges(false)\n      })\n  }\n  \n  function openDocument(){\n    if(previewId){\n      // check for unsaved changes\n      setSearchPanelIsOpen(false)\n      setIoLinksIsOpen(false)\n      \n      safeClose(()=>{\n        updatePostId(previewId)\n        setPreviewId(null)\n      })\n    }\n  }\n\n\n  function insertDocument(){\n    if(results){\n      const result = results.filter(x=>x['id']==previewId)[0]\n      var itext = '['+result['title']+']'+'(VID='+result['id']+')'\n      if(vimRef.current){\n        vimRef.current.insert(itext)\n        setSearchPanelIsOpen(false)\n      }\n    }\n  }\n  function deleteDocument(){\n    const payload = {\n      path: 'notes/'+previewId+'/delete/',\n      method: 'GET',\n      body: null,\n      callback:(res:any)=>{\n        if(res.delete !== false){\n          if(results !== null){\n            setResults(results.filter(x=>x.id != res.delete))\n            setPreviewId(null)\n          }\n        }\n      }\n    }\n    setAlertText('Are you sure you want to delete this forever?')\n    setSafeChangeCallback(()=>()=>{\n      setPayload(payload)\n    })\n  }\n\n  function forceLogin(){\n    setAuthModal(true)\n    updateAuth(false)\n  }\n  \n  function submitLogin(){\n    const payload = {\n      path:'notes/validateAuth/',\n      method: 'GET',\n      body: null,\n      callback: loginAction\n    }\n    setPayload(payload)\n  }\n\n\n  function getBacklinks(){\n    const payload = {\n      path: 'notes/'+postId+'/getBacklinks/',\n      method: 'GET',\n      body: null,\n      callback:(res:any)=>{\n        setIncomingLinks(res)\n      }\n    }\n    setPayload(payload)\n  }\n\n  function getOutLinks(){\n    console.log('getting outlinks')\n    const payload = {\n      path: 'notes/'+postId+'/getOutlinks/',\n      method: 'GET',\n      body: null,\n      callback:(res:any)=>{\n        console.log(res)\n        setOutgoingLinks(res)\n      }\n    }\n    setPayload(payload)\n  }\n\n  function executeQuery(){\n    const payload = {\n      path: 'notes/search/?query='+query,\n      method: 'GET',\n      body: null,\n      callback: (res:any)=>{\n        console.log(res)\n        _setResults(res)\n        // Todo handle null results\n      }\n    }\n    setPayload(payload)\n    setPreviewId(null)\n  }\n\n  useEffect(()=>{\n    if(auth && postId){\n      console.log('selected new post:'+postId)\n      // logged in & postId has changed...\n      const payload = {\n        path: 'notes/'+postId+'/',\n        method: 'GET',\n        body: null,\n        callback: (result:any)=> {\n          console.log('got a new result!')\n          updateContent(result.content)\n          getBacklinks()\n          getOutLinks()\n          setNewChanges(false)\n        }\n      }\n      setPayload(payload)\n      // getBacklinks()\n    }\n  },[postId])\n\n  useEffect(()=>{\n    // when content is updated, trigger reload by changing the VimKey\n    if(vimRef.current){\n      vimRef.current.flush(content)\n    }\n  },[content])\n\n  useEffect(()=>{\n    console.log(searchFilters)\n  },[searchFilters])\n\n  useEffect(()=>{\n    console.log('Safe Change Callback Set')\n    if(safeChangeCallback !== null){\n      setDialogChangesIsOpen(true)\n    }\n  },[safeChangeCallback])\n\n  function resultRows(data:Array<IResult>){\n    return(\n      <div>{data !== null &&\n        data.map(row=>{\n        var selectedPreview = row['id'] == previewId ? 'selectedRow':''\n        return (\n          <div className={'searchResult '+selectedPreview} onClick={()=>{\n            if(previewId==row['id']){\n              setPreviewId(null)\n            } else{\n              setPreviewId(row['id'])\n            }\n          }}>\n            <div className=\"searchResults_wrapper\">\n              <div className=\"searchResultTitle\">{row['title']}</div>\n              <div className=\"searchResultDate\">{dateFormat(row[searchFilters.order_by],'dd/mmm/yyyy')}</div>\n\n              </div>\n          </div>\n        )\n      })}</div> \n    )\n  }\n\n  function filteredResults(results:Array<IResult>){\n    var fresults = results.filter(x=>{\n      if(searchFilters.date!==null){\n        if(searchFilters.when==='before'){\n          return x[searchFilters.order_by] <= searchFilters.date\n        }\n        if(searchFilters.when==='after'){\n          return x[searchFilters.order_by] >= searchFilters.date\n        }\n      } else {\n        return true\n      }\n    })\n    fresults.sort((a,b)=>{\n      if(searchFilters.sort==='ASC'){\n        return a[searchFilters.order_by].getTime()-b[searchFilters.order_by].getTime()\n      } else {\n        return b[searchFilters.order_by].getTime()-a[searchFilters.order_by].getTime()\n      }\n    })\n    return fresults\n  }\n\n  return (\n    <div className='main'>\n      <Vim  content={content} save={write} quit={quit} ref={vimRef} changesCallback={setNewChanges}/>\n      <Modal\n        isOpen={authModalIsOpen}\n        onRequestClose={closeAuthModal}\n        className='SearchModal'\n        overlayClassName='SearchOverlay'\n        >\n        <div className=\"IoLinks_wrapper\">\n        <div className=\"IoLinks_incoming\">\n        \n        <form onSubmit={(e)=>{\n          e.preventDefault()\n          submitLogin()\n        }}>\n            <input name='username' className='greenput_narrow' onChange={(e)=>{\n              setUsername(e.target.value)\n            }}/><br />\n            <input type=\"password\" name='password' className='greenput_narrow' onChange={(e)=>{\n              setPassword(e.target.value)\n            }}/><br />\n            <button className='greenput_narrow' type=\"submit\">Login</button>\n          </form>\n        \n        </div>\n        <div className=\"IoLinks_outgoing\"><h1>NullDisk</h1><ul><li>Military Grade Encryption</li><li>Zettelkasten Schema</li><li>VIM Keybindings</li></ul></div>\n        </div>\n        </Modal> \n\n        <Modal\n        isOpen={searchPanelIsOpen}\n        onRequestClose={()=>setSearchPanelIsOpen(false)}\n        className='SearchModal'\n        overlayClassName='SearchOverlay'\n        >\n          <div className=\"searchBox\">\n            <form action=\"#\" autoComplete=\"off\" onSubmit={(e)=>{\n              e.preventDefault()\n              executeQuery()\n            }}>\n            <input className='greenput' name=\"query\" autoFocus onChange={(e)=>setQuery(e.target.value)}/>\n            <select className='greenput_narrow' onChange={(e)=>setSearchFilters({...searchFilters,primary:e.target.value})}>\n              <option value='date_created'>Created</option>\n              <option value=\"date_updated\">Updated</option>\n            </select>\n            <select className='greenput_narrow' onChange={(e)=>setSearchFilters({...searchFilters,when:e.target.value})}>\n              <option value=\"after\">After</option>\n              <option value=\"before\">Before</option>\n            </select>\n            <input className='greenput_narrow' type=\"date\" onChange={(e)=>setSearchFilters({...searchFilters,date:(e.target.value===''?null:new Date(e.target.value))})} />\n            &nbsp; :: &nbsp;\n            <select className='greenput_narrow' onChange={(e)=>setSearchFilters({...searchFilters,order_by:e.target.value as orderByDate})}>\n              <option value='date_created'>Created</option>\n              <option value=\"date_updated\">Updated</option>\n            </select>\n            <select className='greenput_narrow' onChange={(e)=>setSearchFilters({...searchFilters,sort:e.target.value as sortType})}>\n              <option value=\"DESC\">DESC</option>\n              <option value=\"ASC\">ASC</option>\n            </select>\n            </form>\n\n          {previewId !==null &&\n          <div className=\"searchButtonsWrapper\">\n            <div className=\"button_open button\" onClick={openDocument}>Open</div>\n            <div className=\"button_insert button\" onClick={insertDocument}>Insert</div>\n            <div className=\"button_delete button\" onClick={deleteDocument}>Delete</div>\n          </div>\n          }\n\n          <div className=\"searchResults\">\n          {results !==null && results.some(x=>x) &&\n            resultRows(filteredResults(results))\n          }\n          </div>\n          <div className=\"spacer\"></div>\n          <div className=\"searchPreview\"><pre>\n          {previewId !== null && results !==null &&\n            results.filter(x=>x['id']==previewId).map(prev=>prev['content']) \n          }\n          {previewId ===null && (<span>search for a document to preview it here</span>)}\n          </pre></div>\n          </div>\n        </Modal>\n\n        <Modal isOpen={ dialogChangesIsOpen } className=\"SearchModal\" overlayClassName=\"SearchOverlay\"><div className=\"alertBox\">\n          <span className=\"alertText\">{alertText}</span>\n          <div className=\"button\" onClick={()=>{\n            if(safeChangeCallback !==null){\n              safeChangeCallback()\n            }\n            setDialogChangesIsOpen(false)\n          }}>Override</div>\n          <div className=\"button\" onClick={()=>setDialogChangesIsOpen(false)}>Abort</div>\n          </div></Modal>\n\n          <Modal isOpen={IoLinksIsOpen} className=\"SearchModal\" overlayClassName=\"SearchOverlay\" onRequestClose={()=>setIoLinksIsOpen(false)}>\n        <div className=\"IoLinks_wrapper\">\n        <div className=\"IoLinks_navigation\">\n          {(previewId && incomingLinks !==null && outgoingLinks !==null) && (incomingLinks.filter(x=>x['id']==previewId).length>0 || outgoingLinks.filter(x=>x['id']==previewId).length>0) &&\n            <div className=\"button\" onClick={openDocument}>Open</div>\n          }\n        </div>\n        <div className=\"IoLinks_incoming\"><span className=\"title\">Incoming Links</span>\n            {incomingLinks !==null && \n            resultRows(incomingLinks)}\n          </div>\n          <div className=\"IoLinks_outgoing\"><span className=\"title\">Outgoing Links</span>\n            {outgoingLinks !==null &&\n            resultRows(outgoingLinks)}\n          </div>\n          <div className=\"IoLinks_preview\">\n            <pre>\n              {previewId && incomingLinks &&\n                incomingLinks.filter(object=>object['id']==previewId).map(res=>res['content'])\n              }\n              {previewId && outgoingLinks &&\n                outgoingLinks.filter(object=>object['id']==previewId).map(res=>res['content'])\n              }\n            </pre>\n          </div>\n        </div>\n        </Modal>\n\n          <div className=\"main_buttons_wrapper\">\n            <div className=\"button\" onClick={()=>setSearchPanelIsOpen(true)}>Explorer</div>\n            <div className=\"button\" onClick={()=>newFile()}>New File</div>\n            <div className=\"button\" onClick={()=>setIoLinksIsOpen(true)}><span style={(incomingLinks.length>0||outgoingLinks.length>0) ? ({color:'red', fontWeight:'bold'}) : ({}) }>Connections { incomingLinks.length}/{outgoingLinks.length}</span></div>\n          </div>\n    </div>\n  )\n}\n\nexport default Main\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './Main';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}